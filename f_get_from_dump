/* From Master travel: http://www.traveldba.com/wp-content/uploads/scripts/f_get_from_dump.sql */

CREATE OR REPLACE FUNCTION F_GET_FROM_DUMP
(
   P_DUMP IN VARCHAR2,
   P_TYPE IN VARCHAR2
)
   RETURN VARCHAR2 AS
   V_LENGTH_STR VARCHAR2(10);
   V_LENGTH NUMBER DEFAULT 7;
   V_DUMP_ROWID VARCHAR2(30000);

   V_DATE_STR VARCHAR2(100);
   TYPE T_DATE IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
   V_DATE T_DATE;

   FUNCTION F_ADD_PREFIX_ZERO (P_STR IN VARCHAR2, P_POSITION IN NUMBER) RETURN VARCHAR2
   AS
    V_STR VARCHAR2(30000) := P_STR;
    V_POSITION NUMBER := P_POSITION;
    V_STR_PART VARCHAR2(2);
    V_RETURN VARCHAR2(30000);
   BEGIN
    WHILE (V_POSITION != 0) LOOP
     V_STR_PART := SUBSTR(V_STR, 1, V_POSITION - 1);
     V_STR := SUBSTR(V_STR, V_POSITION + 1);
     IF V_POSITION = 2 THEN
      V_RETURN := V_RETURN || '0' || V_STR_PART;
     ELSIF V_POSITION = 3 THEN
      V_RETURN := V_RETURN || V_STR_PART;
     ELSE
      RAISE_APPLICATION_ERROR(-20002, 'DUMP ERROR CHECK THE INPUT ROWID');
     END IF;
     V_POSITION := INSTR(V_STR, ',');
    END LOOP;
    RETURN REPLACE(V_RETURN , ',');
   END F_ADD_PREFIX_ZERO;

  BEGIN
   IF SUBSTR(P_DUMP, 1, 3) = 'Typ' THEN
    V_DUMP_ROWID := SUBSTR(P_DUMP, INSTR(P_DUMP, ':') + 2);
   ELSE
    V_DUMP_ROWID := P_DUMP;
   END IF;

   IF P_TYPE = 'VARCHAR2' OR P_TYPE = 'CHAR' THEN
    V_DUMP_ROWID :=F_ADD_PREFIX_ZERO(V_DUMP_ROWID || ',', INSTR(V_DUMP_ROWID, ','));
    RETURN(UTL_RAW.CAST_TO_VARCHAR2(V_DUMP_ROWID));
   ELSIF P_TYPE = 'NUMBER' THEN
    V_DUMP_ROWID :=F_ADD_PREFIX_ZERO(V_DUMP_ROWID || ',', INSTR(V_DUMP_ROWID, ','));
    RETURN(TO_CHAR(UTL_RAW.CAST_TO_NUMBER(V_DUMP_ROWID)));
   ELSIF P_TYPE = 'DATE' THEN
    V_DUMP_ROWID := ',' || V_DUMP_ROWID || ',';
    FOR I IN 1..7 LOOP
     V_DATE(I) := TO_NUMBER(SUBSTR(V_DUMP_ROWID, INSTR(V_DUMP_ROWID, ',', 1, I) + 1, INSTR(V_DUMP_ROWID, ',', 1, I + 1) - INSTR(V_DUMP_ROWID, ',', 1, I) - 1), 'XXX');
    END LOOP;

    V_DATE(1) := V_DATE(1) - 100;
    V_DATE(2) := V_DATE(2) - 100;

    IF ((V_DATE(1) < 0) OR (V_DATE(2) < 0)) THEN
     V_DATE_STR := '-' || LTRIM(TO_CHAR(ABS(V_DATE(1)), '00')) || LTRIM(TO_CHAR(ABS(V_DATE(2)), '00'));
    ELSE
     V_DATE_STR := LTRIM(TO_CHAR(ABS(V_DATE(1)), '00')) || LTRIM(TO_CHAR(ABS(V_DATE(2)),'00'));
    END IF;

    V_DATE_STR := V_DATE_STR || '-' || TO_CHAR(V_DATE(3)) || '-' || TO_CHAR(V_DATE(4)) || ' ' || TO_CHAR(V_DATE(5) - 1) || ':' || TO_CHAR(V_DATE(6) - 1) || ':' || TO_CHAR(V_DATE(7) - 1);
    RETURN (V_DATE_STR);
     ELSIF ((P_TYPE LIKE 'TIMESTAMP(_)') OR (P_TYPE = 'TIMESTAMP')) THEN
      V_DUMP_ROWID := ',' || V_DUMP_ROWID || ',';
        FOR I IN 1..11 LOOP
     V_DATE(I) := TO_NUMBER(SUBSTR(V_DUMP_ROWID, INSTR(V_DUMP_ROWID, ',', 1, I) + 1, INSTR(V_DUMP_ROWID, ',', 1, I + 1) - INSTR(V_DUMP_ROWID, ',', 1, I) - 1), 'XXX');
    END LOOP;

    V_DATE(1) := V_DATE(1) - 100;
    V_DATE(2) := V_DATE(2) - 100;

    IF ((V_DATE(1) < 0) OR (V_DATE(2) < 0)) THEN
     V_DATE_STR := '-' || LTRIM(TO_CHAR(ABS(V_DATE(1)), '00')) || LTRIM(TO_CHAR(ABS(V_DATE(2)), '00'));
    ELSE
     V_DATE_STR := LTRIM(TO_CHAR(ABS(V_DATE(1)), '00')) || LTRIM(TO_CHAR(ABS(V_DATE(2)),'00'));
    END IF;

    V_DATE_STR := V_DATE_STR || '-' || TO_CHAR(V_DATE(3)) || '-' || TO_CHAR(V_DATE(4)) || ' ' ||
     TO_CHAR(V_DATE(5) - 1) || ':' || TO_CHAR(V_DATE(6) - 1) || ':' || TO_CHAR(V_DATE(7) - 1) || '.' ||

     SUBSTR(TO_CHAR(V_DATE(8) * POWER(256, 3) + V_DATE(9) * POWER(256, 2) + V_DATE(10) * 256 + V_DATE(11)), 1, NVL(TO_NUMBER(SUBSTR(P_TYPE, 11, 1)), 6));

    RETURN (V_DATE_STR);

   ELSIF P_TYPE = 'RAW' THEN
    V_DUMP_ROWID :=F_ADD_PREFIX_ZERO(V_DUMP_ROWID || ',', INSTR(V_DUMP_ROWID, ','));
    RETURN(V_DUMP_ROWID);
   ELSIF P_TYPE = 'ROWID' THEN
    V_DUMP_ROWID :=F_ADD_PREFIX_ZERO(V_DUMP_ROWID || ',', INSTR(V_DUMP_ROWID, ','));
      RETURN (DBMS_ROWID.ROWID_CREATE(1, TO_NUMBER(SUBSTR(V_DUMP_ROWID, 1, 8), 'XXXXXXXXXXX'), TRUNC(TO_NUMBER(SUBSTR(V_DUMP_ROWID, 9, 4), 'XXXXXX')/64), TO_NUMBER(MOD(TO_NUMBER(SUBSTR(V_DUMP_ROWID, 9, 4), 'XXXXXX'), 64) || TO_NUMBER(SUBSTR(V_DUMP_ROWID, 13, 4), 'XXXXXXXXXXX')), TO_NUMBER(SUBSTR(V_DUMP_ROWID, 17, 4), 'XXXXXX')));
   ELSE
    RAISE_APPLICATION_ERROR(-20001, 'TYPE NOT VALID OR CAN''T TRANSALTE ' || P_TYPE || ' TYPE');
   END IF;
  END;
/
